# This is a basic workflow to help you get started with Actions

name: deploy to prod-ebs

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: rideeze/solarwebsite
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}


jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: rideeze/solarwebsite
      
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Build deployment package
        run: zip -r deploy.zip . -x '*.git*' -x "**node_modules**"        
      
      - name: Deploy to AWS Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v16
        with:
            aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            region: us-east-1
            application_name: apwsolar.com
            environment_name: prod-apwsolarcom-env
            version_label: ${{ github.sha }}
            use_existing_version_if_available: true
            deployment_package: deploy.zip
      
      - name: Send deployment status to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:          
          payload: |
            {
              "text": "Production Environment: ${{ github.repository }} build and deployment result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"              
            }        

